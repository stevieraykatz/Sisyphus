/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Sisyphus, SisyphusInterface } from "../../contracts/Sisyphus";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startingPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timerDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentRateIncrease",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentToBoulder",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentToPushers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentToReserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastPush",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boulderAtLastPush",
            type: "uint256",
          },
        ],
        internalType: "struct Sisyphus.GameParams",
        name: "initParams",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "PendingParams",
    outputs: [
      {
        internalType: "uint256",
        name: "startingPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timerDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "percentRateIncrease",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "percentToBoulder",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "percentToPushers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "percentToReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPush",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boulderAtLastPush",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "boulder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startingPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timerDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentRateIncrease",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentToBoulder",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentToPushers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentToReserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastPush",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boulderAtLastPush",
            type: "uint256",
          },
        ],
        internalType: "struct Sisyphus.GameParams",
        name: "NewParams",
        type: "tuple",
      },
    ],
    name: "changeGameParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_game",
        type: "uint256",
      },
    ],
    name: "claimWinningsByGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWinner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ownerWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "pushTheBoulder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resetTheGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060125560006013553480156200001b57600080fd5b506040516200260138038062002601833981810160405281019062000041919062000493565b62000061620000556200020460201b60201c565b6200020c60201b60201c565b60018081905550600760008154809291906200007d90620004f5565b91905055508060000151600960006007548152602001908152602001600020600001819055508060200151600960006007548152602001908152602001600020600101819055508060400151600960006007548152602001908152602001600020600201819055508060600151600960006007548152602001908152602001600020600301819055508060800151600960006007548152602001908152602001600020600401819055508060a0015160096000600754815260200190815260200160002060050181905550600960006007548152602001908152602001600020600a60008201548160000155600182015481600101556002820154816002015560038201548160030155600482015481600401556005820154816005015560068201548160060155600782015481600701559050506009600060075481526020019081526020016000206001015442620001d8919062000543565b6005819055506009600060075481526020019081526020016000206000015460038190555050620005a0565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200032f82620002e4565b810181811067ffffffffffffffff82111715620003515762000350620002f5565b5b80604052505050565b600062000366620002d0565b905062000374828262000324565b919050565b6000819050919050565b6200038e8162000379565b81146200039a57600080fd5b50565b600081519050620003ae8162000383565b92915050565b60006101008284031215620003ce57620003cd620002df565b5b620003db6101006200035a565b90506000620003ed848285016200039d565b600083015250602062000403848285016200039d565b602083015250604062000419848285016200039d565b60408301525060606200042f848285016200039d565b606083015250608062000445848285016200039d565b60808301525060a06200045b848285016200039d565b60a08301525060c062000471848285016200039d565b60c08301525060e062000487848285016200039d565b60e08301525092915050565b60006101008284031215620004ad57620004ac620002da565b5b6000620004bd84828501620003b4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620005028262000379565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620005385762000537620004c6565b5b600182019050919050565b6000620005508262000379565b91506200055d8362000379565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620005955762000594620004c6565b5b828201905092915050565b61205180620005b06000396000f3fe6080604052600436106100c25760003560e01c80638da5cb5b1161007f578063aabe2fe311610059578063aabe2fe314610216578063c8e0a35814610241578063cd3293de1461024b578063f2fde38b14610276576100c2565b80638da5cb5b146101a95780639d1b464a146101d4578063a3d31a24146101ff576100c2565b806308627748146100c757806333f707d1146100f95780633e34509914610115578063715018a61461013e57806379ebc201146101555780637e9bece514610180575b600080fd5b3480156100d357600080fd5b506100dc61029f565b6040516100f0989796959493929190611498565b60405180910390f35b610113600480360381019061010e9190611547565b6102d5565b005b34801561012157600080fd5b5061013c60048036038101906101379190611547565b610385565b005b34801561014a57600080fd5b506101536106b4565b005b34801561016157600080fd5b5061016a6106c8565b6040516101779190611574565b60405180910390f35b34801561018c57600080fd5b506101a760048036038101906101a291906115b4565b6106ce565b005b3480156101b557600080fd5b506101be6106eb565b6040516101cb9190611623565b60405180910390f35b3480156101e057600080fd5b506101e9610714565b6040516101f69190611574565b60405180910390f35b34801561020b57600080fd5b5061021461071a565b005b34801561022257600080fd5b5061022b61089e565b6040516102389190611623565b60405180910390f35b6102496108c4565b005b34801561025757600080fd5b50610260610aae565b60405161026d9190611574565b60405180910390f35b34801561028257600080fd5b5061029d6004803603810190610298919061166a565b610ab4565b005b600a8060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154905088565b6102dd610b38565b601354811115610322576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103199061171a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610368573d6000803e3d6000fd5b50806013600082825461037b9190611769565b9250508190555050565b600260015414156103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c2906117e9565b60405180910390fd5b600260018190555060006008600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561046f57602002820191906000526020600020905b81548152602001906001019080831161045b575b5050505050905060008151116104ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b190611855565b60405180910390fd5b81600754116104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f5906118c1565b60405180910390fd5b6000806009600085815260200190815260200160002060060154905060005b600081141561059d57600084828151811061053b5761053a6118e1565b5b60200260200101519050828114156105725760096000878152602001908152602001600020600701548461056f9190611910565b93505b61057c8682610bb6565b846105879190611910565b935050808061059590611966565b91505061051d565b506008600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006105fa9190611441565b60003373ffffffffffffffffffffffffffffffffffffffff1683604051610620906119e0565b60006040518083038185875af1925050503d806000811461065d576040519150601f19603f3d011682016040523d82523d6000602084013e610662565b606091505b50509050806106a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069d90611a41565b60405180910390fd5b505050506001808190555050565b6106bc610b38565b6106c66000610be6565b565b60125481565b6106d6610b38565b80600a81816106e59190611c2b565b90505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b600554421161075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590611c85565b60405180910390fd5b600654600960006007548152602001908152602001600020600601819055506012546009600060075481526020019081526020016000206007018190555060006006819055506000601281905550600760008154809291906107bf90611966565b9190505550600a6009600060075481526020019081526020016000206000820154816000015560018201548160010155600282015481600201556003820154816003015560048201548160040155600582015481600501556006820154816006015560078201548160070155905050600960006007548152602001908152602001600020600101546004546108549190611910565b6005819055506000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003543414610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90611d17565b60405180910390fd5b426005541161094c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094390611d83565b60405180910390fd5b6006600081548092919061095f90611966565b919050555060086000600754815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600654908060018154018082558091505060019003906000526020600020016000909190919091505533600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a2c60075434610caa565b60126000828254610a3d9190611910565b92505081905550610a5060075434610ce3565b60136000828254610a619190611910565b92505081905550610a73600754610d1c565b6003819055504260048190555060096000600754815260200190815260200160002060010154600454610aa69190611910565b600581905550565b60135481565b610abc610b38565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2390611e15565b60405180910390fd5b610b3581610be6565b50565b610b40610d63565b73ffffffffffffffffffffffffffffffffffffffff16610b5e6106eb565b73ffffffffffffffffffffffffffffffffffffffff1614610bb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bab90611e81565b60405180910390fd5b565b60008060096000858152602001908152602001600020600601549050610bdd848285610d6b565b91505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000612710600960008581526020019081526020016000206003015483610cd19190611ea1565b610cdb9190611f2a565b905092915050565b6000612710600960008581526020019081526020016000206005015483610d0a9190611ea1565b610d149190611f2a565b905092915050565b60006127106009600084815260200190815260200160002060020154600354610d459190611ea1565b610d4f9190611f2a565b600354610d5c9190611910565b9050919050565b600033905090565b600082821015610da757610d7f8483610dbb565b610d9685858580610d8f90611966565b9650610d6b565b610da09190611910565b9050610db4565b610db18483610dbb565b90505b9392505050565b600080600960008581526020019081526020016000206002015490506000600960008681526020019081526020016000206000015490506000610e0083612710610e2c565b6001610e0c9190611f68565b9050610e21610e1b8287610e94565b836111a9565b935050505092915050565b600080821415610e3b57600080fd5b6000610e478484611264565b90506f7fffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff161115610e8a57600080fd5b8091505092915050565b600080600084600f0b128015610eac57506001808416145b905060008085600f0b12610ec05784610ec5565b846000035b6fffffffffffffffffffffffffffffffff16905060007001000000000000000000000000000000009050680100000000000000008211610f9f57603f82901b91505b60008514610f935760006001861614610f2457607f828202901c90505b607f828302901c915060006002861614610f4257607f828202901c90505b607f828302901c915060006004861614610f6057607f828202901c90505b607f828302901c915060006008861614610f7e57607f828202901c90505b607f828302901c9150600485901c9450610f07565b604081901c9050611139565b6000603f90506c01000000000000000000000000831015610fc857602083901b92506020810390505b6e010000000000000000000000000000831015610fed57601083901b92506010810390505b6f0100000000000000000000000000000083101561101357600883901b92506008810390505b6f1000000000000000000000000000000083101561103957600483901b92506004810390505b6f4000000000000000000000000000000083101561105f57600283901b92506002810390505b6f8000000000000000000000000000000083101561108557600183901b92506001810390505b60005b60008714611120576040821061109d57600080fd5b600060018816146110de57607f848402901c925081810190507001000000000000000000000000000000008311156110dd57600183901c92506001810190505b5b607f848502901c9350600182901b9150700100000000000000000000000000000000841061111457600184901c93506001820191505b600187901c9650611088565b6040811061112d57600080fd5b8060400383901c925050505b600083611146578161114b565b816000035b90507fffffffffffffffffffffffffffffffff80000000000000000000000000000000600f0b811215801561119357506f7fffffffffffffffffffffffffffffff600f0b8113155b61119c57600080fd5b8094505050505092915050565b6000808214156111bc576000905061125e565b600083600f0b12156111cd57600080fd5b600060406fffffffffffffffffffffffffffffffff841685600f0b02901c90506000608084901c85600f0b02905077ffffffffffffffffffffffffffffffffffffffffffffffff81111561122057600080fd5b604081901b9050817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0381111561125657600080fd5b818101925050505b92915050565b60008082141561127357600080fd5b600077ffffffffffffffffffffffffffffffffffffffffffffffff84116112b05782604085901b816112a8576112a7611efb565b5b04905061141a565b600060c09050600060c086901c905064010000000081106112d957602081901c90506020820191505b6201000081106112f157601081901c90506010820191505b610100811061130857600881901c90506008820191505b6010811061131e57600481901c90506004820191505b6004811061133457600281901c90506002820191505b60028110611343576001820191505b600160bf830360018703901c018260ff0387901b8161136557611364611efb565b5b0492506fffffffffffffffffffffffffffffffff83111561138557600080fd5b6000608086901c8402905060006fffffffffffffffffffffffffffffffff871685029050600060c089901c9050600060408a901b9050828110156113ca576001820391505b8281039050608084901b9250828110156113e5576001820391505b8281039050608084901c82146113fe576113fd611fec565b5b88818161140e5761140d611efb565b5b04870196505050505050505b6fffffffffffffffffffffffffffffffff81111561143757600080fd5b8091505092915050565b508054600082559060005260206000209081019061145f9190611462565b50565b5b8082111561147b576000816000905550600101611463565b5090565b6000819050919050565b6114928161147f565b82525050565b6000610100820190506114ae600083018b611489565b6114bb602083018a611489565b6114c86040830189611489565b6114d56060830188611489565b6114e26080830187611489565b6114ef60a0830186611489565b6114fc60c0830185611489565b61150960e0830184611489565b9998505050505050505050565b600080fd5b6115248161147f565b811461152f57600080fd5b50565b6000813590506115418161151b565b92915050565b60006020828403121561155d5761155c611516565b5b600061156b84828501611532565b91505092915050565b60006020820190506115896000830184611489565b92915050565b600080fd5b600061010082840312156115ab576115aa61158f565b5b81905092915050565b600061010082840312156115cb576115ca611516565b5b60006115d984828501611594565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061160d826115e2565b9050919050565b61161d81611602565b82525050565b60006020820190506116386000830184611614565b92915050565b61164781611602565b811461165257600080fd5b50565b6000813590506116648161163e565b92915050565b6000602082840312156116805761167f611516565b5b600061168e84828501611655565b91505092915050565b600082825260208201905092915050565b7f5769746864726177616c20616d6f756e74206d757374206265206c657373207460008201527f68616e20726573657276657320617661696c61626c6500000000000000000000602082015250565b6000611704603683611697565b915061170f826116a8565b604082019050919050565b60006020820190508181036000830152611733816116f7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117748261147f565b915061177f8361147f565b9250828210156117925761179161173a565b5b828203905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006117d3601f83611697565b91506117de8261179d565b602082019050919050565b60006020820190508181036000830152611802816117c6565b9050919050565b7f4e6f7468696e6720746f20776974686472617700000000000000000000000000600082015250565b600061183f601383611697565b915061184a82611809565b602082019050919050565b6000602082019050818103600083015261186e81611832565b9050919050565b7f47616d65206973206e6f74206f76657220796574000000000000000000000000600082015250565b60006118ab601483611697565b91506118b682611875565b602082019050919050565b600060208201905081810360008301526118da8161189e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061191b8261147f565b91506119268361147f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561195b5761195a61173a565b5b828201905092915050565b60006119718261147f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119a4576119a361173a565b5b600182019050919050565b600081905092915050565b50565b60006119ca6000836119af565b91506119d5826119ba565b600082019050919050565b60006119eb826119bd565b9150819050919050565b7f4661696c656420746f207472616e736665722077696e6e696e67730000000000600082015250565b6000611a2b601b83611697565b9150611a36826119f5565b602082019050919050565b60006020820190508181036000830152611a5a81611a1e565b9050919050565b60008135611a6e8161151b565b80915050919050565b60008160001b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611ab084611a77565b9350801983169250808416831791505092915050565b6000819050919050565b6000611aeb611ae6611ae18461147f565b611ac6565b61147f565b9050919050565b6000819050919050565b611b0582611ad0565b611b18611b1182611af2565b8354611a84565b8255505050565b600081016000830180611b3181611a61565b9050611b3d8184611afc565b505050600181016020830180611b5281611a61565b9050611b5e8184611afc565b505050600281016040830180611b7381611a61565b9050611b7f8184611afc565b505050600381016060830180611b9481611a61565b9050611ba08184611afc565b505050600481016080830180611bb581611a61565b9050611bc18184611afc565b5050506005810160a0830180611bd681611a61565b9050611be28184611afc565b5050506006810160c0830180611bf781611a61565b9050611c038184611afc565b5050506007810160e0830180611c1881611a61565b9050611c248184611afc565b5050505050565b611c358282611b1f565b5050565b7f54696d657220686173206e6f7420657870697265640000000000000000000000600082015250565b6000611c6f601583611697565b9150611c7a82611c39565b602082019050919050565b60006020820190508181036000830152611c9e81611c62565b9050919050565b7f4d757374207075736820626f756c64657220776974682065786163746c79207060008201527f7573682070726963650000000000000000000000000000000000000000000000602082015250565b6000611d01602983611697565b9150611d0c82611ca5565b604082019050919050565b60006020820190508181036000830152611d3081611cf4565b9050919050565b7f546869732067616d6520697320657870697265643b2063616c6c207265736574600082015250565b6000611d6d602083611697565b9150611d7882611d37565b602082019050919050565b60006020820190508181036000830152611d9c81611d60565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611dff602683611697565b9150611e0a82611da3565b604082019050919050565b60006020820190508181036000830152611e2e81611df2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611e6b602083611697565b9150611e7682611e35565b602082019050919050565b60006020820190508181036000830152611e9a81611e5e565b9050919050565b6000611eac8261147f565b9150611eb78361147f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ef057611eef61173a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f358261147f565b9150611f408361147f565b925082611f5057611f4f611efb565b5b828204905092915050565b600081600f0b9050919050565b6000611f7382611f5b565b9150611f7e83611f5b565b9250816f7fffffffffffffffffffffffffffffff03831360008312151615611fa957611fa861173a565b5b817fffffffffffffffffffffffffffffffff80000000000000000000000000000000038312600083121615611fe157611fe061173a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea264697066735822122058c9c15040df06ad79c683de0d93eef44fa3c892df5ef1db747574ae2d2e5fe664736f6c634300080a0033";

type SisyphusConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SisyphusConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sisyphus__factory extends ContractFactory {
  constructor(...args: SisyphusConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initParams: Sisyphus.GameParamsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Sisyphus> {
    return super.deploy(initParams, overrides || {}) as Promise<Sisyphus>;
  }
  override getDeployTransaction(
    initParams: Sisyphus.GameParamsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initParams, overrides || {});
  }
  override attach(address: string): Sisyphus {
    return super.attach(address) as Sisyphus;
  }
  override connect(signer: Signer): Sisyphus__factory {
    return super.connect(signer) as Sisyphus__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SisyphusInterface {
    return new utils.Interface(_abi) as SisyphusInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Sisyphus {
    return new Contract(address, _abi, signerOrProvider) as Sisyphus;
  }
}
